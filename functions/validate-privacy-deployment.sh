#!/bin/bash

# üîí PRIVACY SERVICE DEPLOYMENT VALIDATION
# Validates that all GDPR/POPIA compliance functions are ready for deployment

echo "üß™ ASORA PRIVACY SERVICE - DEPLOYMENT READINESS CHECK"
echo "=================================================="

cd "$(dirname "$0")"

echo ""
echo "üìÅ Checking function structure..."

# Check if privacy functions exist
if [ -f "privacy/exportUser.ts" ]; then
    echo "‚úÖ exportUser.ts found"
else
    echo "‚ùå exportUser.ts missing"
    exit 1
fi

if [ -f "privacy/deleteUser.ts" ]; then
    echo "‚úÖ deleteUser.ts found"
else
    echo "‚ùå deleteUser.ts missing"
    exit 1
fi

# Check function configurations
if [ -f "privacy/exportUser/function.json" ]; then
    echo "‚úÖ exportUser function.json found"
else
    echo "‚ùå exportUser function.json missing"
    exit 1
fi

if [ -f "privacy/deleteUser/function.json" ]; then
    echo "‚úÖ deleteUser function.json found"  
else
    echo "‚ùå deleteUser function.json missing"
    exit 1
fi

echo ""
echo "üîç Validating function configurations..."

# Validate exportUser endpoint
export_route=$(grep -o '"route": "[^"]*"' privacy/exportUser/function.json | cut -d'"' -f4)
if [ "$export_route" = "user/export" ]; then
    echo "‚úÖ Export endpoint configured correctly: /api/user/export"
else
    echo "‚ùå Export endpoint misconfigured"
    exit 1
fi

# Validate deleteUser endpoint  
delete_route=$(grep -o '"route": "[^"]*"' privacy/deleteUser/function.json | cut -d'"' -f4)
if [ "$delete_route" = "user/delete" ]; then
    echo "‚úÖ Delete endpoint configured correctly: /api/user/delete"
else
    echo "‚ùå Delete endpoint misconfigured"
    exit 1
fi

echo ""
echo "üìù Checking TypeScript compilation..."

# Compile TypeScript files
if npx tsc --noEmit privacy/exportUser.ts privacy/deleteUser.ts; then
    echo "‚úÖ TypeScript compilation successful"
else
    echo "‚ùå TypeScript compilation failed"
    exit 1
fi

echo ""
echo "üîê Validating security features..."

# Check for JWT authentication
if grep -q "verifyJWT" privacy/exportUser.ts && grep -q "verifyJWT" privacy/deleteUser.ts; then
    echo "‚úÖ JWT authentication implemented"
else
    echo "‚ùå JWT authentication missing"
    exit 1
fi

# Check for rate limiting
if grep -q "checkRateLimit" privacy/exportUser.ts; then
    echo "‚úÖ Rate limiting implemented for exports"
else
    echo "‚ùå Rate limiting missing for exports"
    exit 1
fi

if grep -q "checkRateLimit" privacy/deleteUser.ts; then
    echo "‚úÖ Rate limiting implemented for deletions"
else
    echo "‚ùå Rate limiting missing for deletions"  
    exit 1
fi

# Check for confirmation header requirement
if grep -q "X-Confirm-Delete" privacy/deleteUser.ts; then
    echo "‚úÖ Deletion confirmation mechanism implemented"
else
    echo "‚ùå Deletion confirmation mechanism missing"
    exit 1
fi

echo ""
echo "üìä Validating GDPR compliance features..."

# Check for comprehensive data export
if grep -q "userProfile.*content.*interactions.*moderation" privacy/exportUser.ts; then
    echo "‚úÖ Comprehensive data export implemented"
else
    echo "‚ùå Incomplete data export - missing required sections"
    exit 1
fi

# Check for content anonymization
if grep -q "Deleted User" privacy/deleteUser.ts; then
    echo "‚úÖ Content anonymization implemented"
else
    echo "‚ùå Content anonymization missing"
    exit 1
fi

# Check for audit logging
if grep -q "auditLog" privacy/exportUser.ts && grep -q "auditLog" privacy/deleteUser.ts; then
    echo "‚úÖ Audit logging implemented"
else
    echo "‚ùå Audit logging missing"
    exit 1
fi

echo ""
echo "üåê Environment validation..."

# Check required environment variables are referenced
if grep -q "COSMOS_CONNECTION_STRING" privacy/exportUser.ts && grep -q "COSMOS_CONNECTION_STRING" privacy/deleteUser.ts; then
    echo "‚úÖ Cosmos DB configuration referenced"
else
    echo "‚ùå Cosmos DB configuration missing"
    exit 1
fi

if grep -q "JWT_SECRET" privacy/exportUser.ts && grep -q "JWT_SECRET" privacy/deleteUser.ts; then
    echo "‚úÖ JWT secret configuration referenced"
else
    echo "‚ùå JWT secret configuration missing"
    exit 1
fi

echo ""
echo "üéØ Final validation..."

# Count lines to ensure functions aren't stubs
export_lines=$(wc -l < privacy/exportUser.ts)
delete_lines=$(wc -l < privacy/deleteUser.ts)

if [ "$export_lines" -gt 100 ]; then
    echo "‚úÖ Export function is fully implemented ($export_lines lines)"
else
    echo "‚ùå Export function appears incomplete ($export_lines lines)"
    exit 1
fi

if [ "$delete_lines" -gt 100 ]; then
    echo "‚úÖ Delete function is fully implemented ($delete_lines lines)"
else
    echo "‚ùå Delete function appears incomplete ($delete_lines lines)"
    exit 1
fi

echo ""
echo "üéâ PRIVACY SERVICE DEPLOYMENT READINESS: PASSED"
echo "================================================="
echo ""
echo "üìã Summary:"
echo "  ‚úÖ Function structure complete"
echo "  ‚úÖ Azure Functions configuration ready"
echo "  ‚úÖ TypeScript compilation successful"
echo "  ‚úÖ Security features implemented"
echo "  ‚úÖ GDPR/POPIA compliance features complete"
echo "  ‚úÖ Environment configuration ready"
echo "  ‚úÖ Functions fully implemented"
echo ""
echo "üöÄ Ready for deployment to Azure Functions!"
echo "   Use: npm run deploy or azd up"
echo ""
echo "üß™ Next steps:"
echo "   1. Deploy functions to Azure"
echo "   2. Test with real JWT tokens"
echo "   3. Validate rate limiting in production"
echo "   4. Conduct GDPR compliance audit"
