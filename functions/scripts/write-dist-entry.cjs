#!/usr/bin/env node
const fs = require('node:fs');
const path = require('node:path');

const distDir = path.join(__dirname, '..', 'dist');
const srcEntry = path.join(distDir, 'src', 'index.js');
const destEntry = path.join(distDir, 'index.js');
const srcTypes = path.join(distDir, 'src', 'index.d.ts');
const destTypes = path.join(distDir, 'index.d.ts');
const banner = '// Auto-generated by scripts/write-dist-entry.cjs\n';

if (!fs.existsSync(srcEntry)) {
  console.error('Expected build output missing at', srcEntry);
  process.exit(1);
}

fs.mkdirSync(distDir, { recursive: true });

// Directly require ALL individual route files (not module indexes)
// This ensures app.http() calls execute at top level during module load
const jsContent = `${banner}// Directly require all route modules to ensure registration
require('./src/shared/routes/health');
require('./src/feed/routes/getFeed');
require('./src/feed/routes/createPost');
require('./src/auth/routes/authorize');
require('./src/auth/routes/token');
require('./src/auth/routes/userinfo');
require('./src/moderation/routes/flagContent');
require('./src/moderation/routes/submitAppeal');
require('./src/moderation/routes/voteOnAppeal');
require('./src/privacy/routes/deleteUser');
require('./src/privacy/routes/exportUser');
`;
fs.writeFileSync(destEntry, jsContent, 'utf8');

if (fs.existsSync(srcTypes)) {
  const typesContent = `${banner}export * from './src/index';\n`;
  fs.writeFileSync(destTypes, typesContent, 'utf8');
}

// Copy required Azure Functions files to dist root
const rootDir = path.join(__dirname, '..');
const filesToCopy = ['host.json', 'package.json'];

for (const file of filesToCopy) {
  const srcPath = path.join(rootDir, file);
  const destPath = path.join(distDir, file);

  if (fs.existsSync(srcPath)) {
    if (file === 'package.json') {
      // Create a clean production package.json for deployment
      // - Set main to index.js
      // - Force type to commonjs (critical for Azure Functions Flex)
      // - Include only essential fields
      const pkg = JSON.parse(fs.readFileSync(srcPath, 'utf8'));
      const prodPkg = {
        name: pkg.name,
        version: pkg.version,
        private: true,
        type: 'commonjs',
        main: 'index.js',
        engines: pkg.engines,
        dependencies: pkg.dependencies
      };
      fs.writeFileSync(destPath, JSON.stringify(prodPkg, null, 2) + '\n', 'utf8');
      console.log(`Copied ${file} to dist/ (production CJS package)`);
    } else {
      fs.copyFileSync(srcPath, destPath);
      console.log(`Copied ${file} to dist/`);
    }
  } else {
    console.warn(`Warning: ${file} not found in root directory`);
  }
}
