name: E2E Integration Test

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_FUNCTIONAPP_NAME: asora-function-dev
  AZURE_RESOURCE_GROUP: asora-psql-flex

jobs:
  e2e:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Verify Azure login
        run: |
          az account show
          az group show -n ${{ env.AZURE_RESOURCE_GROUP }} --query name -o tsv
      - name: Get Function key and URL
        id: funcInfo
        run: |
          # Verify Function App exists first
          if ! az functionapp show -g ${{ env.AZURE_RESOURCE_GROUP }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} --query "name" -o tsv >/dev/null 2>&1; then
            echo "::error::Function App '${{ env.AZURE_FUNCTIONAPP_NAME }}' not found in RG '${{ env.AZURE_RESOURCE_GROUP }}'"
            echo "Available Function Apps:"
            az functionapp list --query "[].{name:name,rg:resourceGroup}" -o table || true
            exit 1
          fi
          
          # Get Function App details - use properties.defaultHostName for Flex apps
          key=$(az functionapp keys list -g ${{ env.AZURE_RESOURCE_GROUP }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} --query "masterKey" -o tsv)
          hostname=$(az functionapp show -g ${{ env.AZURE_RESOURCE_GROUP }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} --query "properties.defaultHostName" -o tsv)
          
          # Validate we got valid values
          if [[ -z "$hostname" ]]; then
            echo "::error::Failed to get defaultHostName for Function App"
            echo "Available properties:"
            az functionapp show -g ${{ env.AZURE_RESOURCE_GROUP }} -n ${{ env.AZURE_FUNCTIONAPP_NAME }} --query "{defaultHostName:defaultHostName,propsDefaultHostName:properties.defaultHostName,hostNames:hostNames,propsHostNames:properties.hostNames}" -o json || true
            exit 1
          fi
          if [[ -z "$key" ]]; then
            echo "::error::Failed to get Function App master key"
            exit 1
          fi
          
          echo "FUNCTION_KEY=$key" >> $GITHUB_ENV
          echo "FUNCTION_BASE_URL=https://$hostname" >> $GITHUB_ENV
          echo "Using Function App URL: https://$hostname"
      - name: Install Functions deps
        working-directory: functions
        run: npm ci --omit=dev
      - name: Run E2E script
        if: env.FUNCTION_BASE_URL && env.FUNCTION_KEY
        working-directory: functions
        env:
          FUNCTION_BASE_URL: ${{ env.FUNCTION_BASE_URL }}
          COSMOS_CONNECTION_STRING: ${{ secrets.COSMOS_CONNECTION_STRING }}
          COSMOS_DATABASE_NAME: asora
          FUNCTION_KEY: ${{ env.FUNCTION_KEY }}
        run: |
          echo "Testing Function App at: $FUNCTION_BASE_URL"
          # Validate FUNCTION_BASE_URL has a proper hostname
          if [[ ! "$FUNCTION_BASE_URL" =~ ^https://[a-zA-Z0-9.-]+\.azurewebsites\.net$ ]]; then
            echo "::error::Invalid FUNCTION_BASE_URL format: $FUNCTION_BASE_URL"
            exit 1
          fi
          node ../scripts/e2e-itest.js
      - name: Skip E2E (missing config)
        if: '!(env.FUNCTION_BASE_URL && env.FUNCTION_KEY)'
        run: |
          echo "::warning::Skipping E2E test due to missing FUNCTION_BASE_URL or FUNCTION_KEY"
          echo "FUNCTION_BASE_URL: ${FUNCTION_BASE_URL:-<not set>}"
          echo "FUNCTION_KEY: ${FUNCTION_KEY:+<set>}"
      - name: Upload E2E report
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: functions/e2e-report.json
