name: E2E Integration Test

on:
  workflow_run:
    workflows: ["Deploy Functions (Flex)"]
    types: [completed]
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_FUNCTIONAPP_NAME: asora-function-dev
  AZURE_RESOURCE_GROUP: asora-psql-flex

jobs:
  e2e:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Clear MSAL cache
        shell: bash
        run: |
          # Clear MSAL cache to avoid AttributeError issues
          rm -rf ~/.azure/msal_token_cache.json || true
          rm -rf ~/.azure/accessTokens.json || true

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Discover keys & URL
        id: info
        shell: bash
        run: |
          set -Eeuo pipefail
          RG="asora-psql-flex"; APP="asora-function-dev"
          host=$(az functionapp show -g "$RG" -n "$APP" --query "defaultHostName" -o tsv)
          key=$(az functionapp keys list -g "$RG" -n "$APP" --query "functionKeys.default" -o tsv)
          echo "FUNCTION_BASE_URL=https://${host}" >> $GITHUB_ENV
          echo "FUNCTION_KEY=${key}" >> $GITHUB_ENV

      - name: Wait for host Running
        shell: bash
        env:
          FUNCTION_BASE_URL: ${{ env.FUNCTION_BASE_URL }}
          FUNCTION_KEY: ${{ env.FUNCTION_KEY }}
        run: |
          set -Eeuo pipefail
          base="${FUNCTION_BASE_URL%/}"
          for i in {1..30}; do
            state=$(curl -sS -H "x-functions-key: $FUNCTION_KEY" "$base/admin/host/status" | jq -r '.state // empty')
            echo "Host state: ${state:-unknown} ($i/30)"
            [[ "$state" == "Running" ]] && exit 0
            sleep $((i))
          done
          echo "::error::Functions host did not reach Running state"; exit 1

      - name: E2E
        run: |
          echo "Testing Function App at: $FUNCTION_BASE_URL"
          node scripts/e2e-itest.js
