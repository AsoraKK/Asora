name: Coverage Gate

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  coverage-gate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and run Functions tests with coverage
        run: |
          cd functions
          npm ci
          npm test -- --coverage

      - name: Setup Flutter 3.x
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Run Flutter tests with coverage
        run: flutter test --coverage

      - name: Run P1 Flutter coverage gate
        run: |
          if [ ! -f ./check_p1_coverage.sh ]; then
            echo "check_p1_coverage.sh not found at repo root"
            exit 1
          fi
          if [ ! -f coverage/lcov.info ]; then
            echo "coverage/lcov.info not found. Run 'flutter test --coverage' before invoking the gate."
            exit 1
          fi
          chmod +x ./check_p1_coverage.sh
          ./check_p1_coverage.sh

      - name: Merge LCOV reports
        run: npx --yes lcov-result-merger 'functions/**/coverage/lcov.info' 'coverage/lcov.info' > coverage/merged.info

      - name: Install lcov tools
        run: sudo apt-get update && sudo apt-get install -y lcov

      - name: Generate coverage HTML report
        run: |
          if [ -f coverage/merged.info ] && grep -q 'SF:' coverage/merged.info; then
            genhtml --ignore-errors source coverage/merged.info -o coverage/html
          else
            echo "coverage/merged.info missing or empty; skipping genhtml"
          fi

      - name: Gate Functions coverage
        run: |
          SUMMARY_FILE="functions/coverage/coverage-summary.json"
          if [ ! -f "$SUMMARY_FILE" ]; then
            echo "${SUMMARY_FILE} not found. Ensure vitest generated coverage-summary.json (json-summary reporter enabled)."
            exit 1
          fi
          LINES=$(jq -r '.total.lines.pct // 0' "$SUMMARY_FILE")
          BRANCHES=$(jq -r '.total.branches.pct // 0' "$SUMMARY_FILE")
          echo "Functions lines=${LINES}% branches=${BRANCHES}%"
          awk "BEGIN {exit !(${LINES}>=96 && ${BRANCHES}>=92)}"

      - name: Gate merged LCOV coverage
        run: |
          if [ ! -f coverage/merged.info ]; then
            echo "coverage/merged.info not found; skipping merged LCOV gate"
            exit 0
          fi
          HITS=$(grep -Po 'LH:\K\d+' coverage/merged.info | awk '{s+=$1} END{print s}')
          FOUND=$(grep -Po 'LF:\K\d+' coverage/merged.info | awk '{s+=$1} END{print s}')
          HITS=${HITS:-0}
          FOUND=${FOUND:-0}
          if [ "$FOUND" -eq 0 ]; then
            echo "No instrumented lines found in merged.info (LF==0); skipping merged LCOV gate"
            exit 0
          fi
          # compute percentage with awk for robust float math
          pct=$(awk -v h="$HITS" -v f="$FOUND" 'BEGIN{printf "%.2f", (h/f)*100}')
          echo "Merged lines ~ ${pct}%"
          # fail if below threshold (round to integer for simple compare)
          pct_int=$(printf "%.0f" "$pct")
          if [ "$pct_int" -lt 96 ]; then
            echo "Merged coverage ${pct}% is below threshold 96%"
            exit 1
          fi

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts
          path: |
            functions/coverage/**
            coverage/merged.info
            coverage/html/**
      - name: Check merged LCOV for content
        id: check_merged
        run: |
          if [ -f coverage/merged.info ] && grep -q 'SF:' coverage/merged.info; then
            echo "merged_has_records=true" >> $GITHUB_OUTPUT
          else
            echo "merged_has_records=false" >> $GITHUB_OUTPUT
          fi

      - name: Post coverage summary
        if: steps.check_merged.outputs.merged_has_records == 'true'
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/merged.info
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '96 92'