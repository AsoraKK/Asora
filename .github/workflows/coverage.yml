name: Coverage Gate

permissions:
  contents: write
  pull-requests: write

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test-functions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: functions
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Guard against UTF-8 BOMs
        run: bash ../scripts/check-bom.sh
      - name: Install deps
        run: npm ci
      - name: Run tests with coverage (Functions)
        run: |
          npm test -- --coverage --ci
      - name: Upload Functions coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-functions
          path: functions/coverage/lcov.info

  test-flutter:
    runs-on: ubuntu-latest
    env:
      ASORA_REQUIRE_REAL_PINS: "false"  # TODO: flip to "true" once real pins land
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Flutter pub get
        run: flutter pub get
      - name: Flutter tests with coverage
        run: flutter test --coverage
      - name: Upload Flutter coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-flutter
          path: coverage/lcov.info

  gate-and-comment:
    needs: [ test-functions, test-flutter ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: coverage-artifacts
      - name: Coverage Summary (min 80%)
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: |
            coverage-artifacts/coverage-functions/lcov.info
            coverage-artifacts/coverage-flutter/lcov.info
          badge: true
          format: 'markdown'
          output: 'both'
          thresholds: '80 80'
          fail_below_min: true
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const summaryPath = path.join(process.env.GITHUB_WORKSPACE, 'code-coverage-results.md');
            const body = fs.existsSync(summaryPath) ? fs.readFileSync(summaryPath, 'utf8') : 'Coverage summary unavailable';
            try {
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body
              });
            } catch (error) {
              if (error.status === 403) {
                console.log("skipped due to permissions");
              } else {
                throw error;
              }
            }
